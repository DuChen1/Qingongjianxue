<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
  <!--放行静态资源(需放在配置DispatcherServlet之前才生效)-->
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.js</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.css</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.png</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.jpg</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.ico</url-pattern>
  </servlet-mapping>


  <!--配置DispatcherServlet -->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--配置初始化参数,读取springMVC的核心配置文件的位置和名称-->
    <!--
    当然,不使用initparam,springMVC会到一个默认路径下读取默认名称的.xml配置文件
    默认路径为/WEB-INF/
    默认配置文件名为:<servlet-name>-servlet.xml
    我们暂时不推荐这种方式
    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc.xml</param-value>
    </init-param>
    <!--<init-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:dispatcherServlet-servlet.xml</param-value>
    </init-param>-->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!--配置dispatcherServlet的映射路径为 / 包含全部的servlet,  JSP除外-->
  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <!--拦截所有的请求，并交由Spring MVC的后台控制器来处理-->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!--  &lt;!&ndash;配置解决中文乱码的过滤器&ndash;&gt;-->
  <!--  <filter>-->
  <!--    <filter-name>characterEncodingFilter</filter-name>-->
  <!--    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>-->
  <!--    &lt;!&ndash;配置过滤器初始化参数&ndash;&gt;-->
  <!--    <init-param>-->
  <!--      <param-name>encoding</param-name>-->
  <!--      <param-value>GBK</param-value>-->
  <!--    </init-param>-->
  <!--    <init-param>-->
  <!--      <param-name>forceEncoding</param-name>-->
  <!--      <param-value>true</param-value>-->
  <!--    </init-param>-->
  <!--  </filter>-->
  <!--  <filter-mapping>-->
  <!--    <filter-name>characterEncodingFilter</filter-name>-->
  <!--    <url-pattern>/*</url-pattern>-->
  <!--  </filter-mapping>-->


  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <!--配置过滤器初始化参数-->
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>



  <!-- spring 监听器的配置 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:beans.xml</param-value>
  </context-param>



</web-app>


